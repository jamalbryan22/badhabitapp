// <auto-generated />
using System;
using BadHabitApp.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace BadHabitApp.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20240926184809_AddDefaultSeedDataAndUpdateNullables")]
    partial class AddDefaultSeedDataAndUpdateNullables
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("BadHabitApp.Models.ApplicationUser", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("AccessFailedCount")
                        .HasColumnType("int");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<bool>("EmailConfirmed")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("LastLogin")
                        .HasColumnType("datetime2");

                    b.Property<bool>("LockoutEnabled")
                        .HasColumnType("bit");

                    b.Property<DateTimeOffset?>("LockoutEnd")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("NormalizedEmail")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedUserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("PasswordHash")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("PhoneNumberConfirmed")
                        .HasColumnType("bit");

                    b.Property<DateTime>("RegistrationDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("SecurityStamp")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("TwoFactorEnabled")
                        .HasColumnType("bit");

                    b.Property<string>("UserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedEmail")
                        .HasDatabaseName("EmailIndex");

                    b.HasIndex("NormalizedUserName")
                        .IsUnique()
                        .HasDatabaseName("UserNameIndex")
                        .HasFilter("[NormalizedUserName] IS NOT NULL");

                    b.ToTable("AspNetUsers", (string)null);
                });

            modelBuilder.Entity("BadHabitApp.Models.Goal", b =>
                {
                    b.Property<int>("GoalId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("GoalId"));

                    b.Property<string>("CreatedByUserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<string>("GoalType")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<bool>("IsDefault")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("GoalId");

                    b.HasIndex("CreatedByUserId");

                    b.ToTable("Goals");

                    b.HasData(
                        new
                        {
                            GoalId = 1,
                            Description = "Completely stop smoking.",
                            GoalType = "Quit",
                            IsDefault = true,
                            Name = "Quit Smoking"
                        },
                        new
                        {
                            GoalId = 2,
                            Description = "Reduce nail biting occurrences.",
                            GoalType = "Reduce",
                            IsDefault = true,
                            Name = "Reduce Nail Biting"
                        },
                        new
                        {
                            GoalId = 3,
                            Description = "Reduce soda consumption to one can per day.",
                            GoalType = "Reduce",
                            IsDefault = true,
                            Name = "Limit Soda Intake"
                        },
                        new
                        {
                            GoalId = 4,
                            Description = "Stop eating fast food.",
                            GoalType = "Quit",
                            IsDefault = true,
                            Name = "Avoid Fast Food"
                        },
                        new
                        {
                            GoalId = 5,
                            Description = "Limit screen time to 2 hours per day.",
                            GoalType = "Reduce",
                            IsDefault = true,
                            Name = "Reduce Screen Time"
                        },
                        new
                        {
                            GoalId = 6,
                            Description = "Engage in physical activity 5 times a week.",
                            GoalType = "Increase",
                            IsDefault = true,
                            Name = "Exercise Regularly"
                        },
                        new
                        {
                            GoalId = 7,
                            Description = "Complete tasks promptly.",
                            GoalType = "Improve",
                            IsDefault = true,
                            Name = "Stop Procrastinating"
                        },
                        new
                        {
                            GoalId = 8,
                            Description = "Only make planned purchases.",
                            GoalType = "Quit",
                            IsDefault = true,
                            Name = "Control Impulse Buying"
                        },
                        new
                        {
                            GoalId = 9,
                            Description = "Avoid overeating by eating slowly.",
                            GoalType = "Improve",
                            IsDefault = true,
                            Name = "Eat Mindfully"
                        },
                        new
                        {
                            GoalId = 10,
                            Description = "Avoid eating after 8 PM.",
                            GoalType = "Quit",
                            IsDefault = true,
                            Name = "Stop Late Night Snacking"
                        });
                });

            modelBuilder.Entity("BadHabitApp.Models.Habit", b =>
                {
                    b.Property<int>("HabitId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("HabitId"));

                    b.Property<string>("CreatedByUserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<decimal?>("DefaultCostPerOccurrence")
                        .HasColumnType("decimal(10,2)");

                    b.Property<decimal?>("DefaultOccurrencesPerDay")
                        .HasColumnType("decimal(10,2)");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<bool>("IsDefault")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("HabitId");

                    b.HasIndex("CreatedByUserId");

                    b.ToTable("Habits");

                    b.HasData(
                        new
                        {
                            HabitId = 1,
                            DefaultCostPerOccurrence = 0.50m,
                            DefaultOccurrencesPerDay = 15m,
                            Description = "Smoking cigarettes or other tobacco products.",
                            IsDefault = true,
                            Name = "Smoking"
                        },
                        new
                        {
                            HabitId = 2,
                            DefaultCostPerOccurrence = 0m,
                            DefaultOccurrencesPerDay = 20m,
                            Description = "Biting your fingernails.",
                            IsDefault = true,
                            Name = "Nail Biting"
                        },
                        new
                        {
                            HabitId = 3,
                            DefaultCostPerOccurrence = 1.50m,
                            DefaultOccurrencesPerDay = 3m,
                            Description = "Consuming sugary sodas.",
                            IsDefault = true,
                            Name = "Drinking Soda"
                        },
                        new
                        {
                            HabitId = 4,
                            DefaultCostPerOccurrence = 7.00m,
                            DefaultOccurrencesPerDay = 1m,
                            Description = "Eating fast food meals.",
                            IsDefault = true,
                            Name = "Fast Food Consumption"
                        },
                        new
                        {
                            HabitId = 5,
                            DefaultCostPerOccurrence = 0m,
                            DefaultOccurrencesPerDay = 5m,
                            Description = "Spending too much time on screens.",
                            IsDefault = true,
                            Name = "Excessive Screen Time"
                        },
                        new
                        {
                            HabitId = 6,
                            DefaultCostPerOccurrence = 0m,
                            DefaultOccurrencesPerDay = 1m,
                            Description = "Not engaging in physical activity.",
                            IsDefault = true,
                            Name = "Skipping Exercise"
                        },
                        new
                        {
                            HabitId = 7,
                            DefaultCostPerOccurrence = 0m,
                            DefaultOccurrencesPerDay = 2m,
                            Description = "Delaying tasks that need to be done.",
                            IsDefault = true,
                            Name = "Procrastination"
                        },
                        new
                        {
                            HabitId = 8,
                            DefaultCostPerOccurrence = 20.00m,
                            DefaultOccurrencesPerDay = 0.5m,
                            Description = "Making unplanned purchases.",
                            IsDefault = true,
                            Name = "Impulse Buying"
                        },
                        new
                        {
                            HabitId = 9,
                            DefaultCostPerOccurrence = 5.00m,
                            DefaultOccurrencesPerDay = 1m,
                            Description = "Consuming more food than necessary.",
                            IsDefault = true,
                            Name = "Overeating"
                        },
                        new
                        {
                            HabitId = 10,
                            DefaultCostPerOccurrence = 2.00m,
                            DefaultOccurrencesPerDay = 1m,
                            Description = "Eating snacks late at night.",
                            IsDefault = true,
                            Name = "Late Night Snacking"
                        });
                });

            modelBuilder.Entity("BadHabitApp.Models.Relapse", b =>
                {
                    b.Property<int>("RelapseId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("RelapseId"));

                    b.Property<DateTime>("DateTime")
                        .HasColumnType("datetime2");

                    b.Property<int>("UserHabitId")
                        .HasColumnType("int");

                    b.HasKey("RelapseId");

                    b.HasIndex("UserHabitId");

                    b.ToTable("Relapses");
                });

            modelBuilder.Entity("BadHabitApp.Models.UserGoal", b =>
                {
                    b.Property<int>("UserGoalId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("UserGoalId"));

                    b.Property<DateTime?>("CompletionDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("GoalId")
                        .HasColumnType("int");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<DateTime>("StartDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("TargetDate")
                        .HasColumnType("datetime2");

                    b.Property<decimal?>("TargetValue")
                        .HasColumnType("decimal(10,2)");

                    b.Property<int>("UserHabitId")
                        .HasColumnType("int");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("UserGoalId");

                    b.HasIndex("GoalId");

                    b.HasIndex("UserHabitId");

                    b.HasIndex("UserId");

                    b.ToTable("UserGoals");
                });

            modelBuilder.Entity("BadHabitApp.Models.UserHabit", b =>
                {
                    b.Property<int>("UserHabitId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("UserHabitId"));

                    b.Property<decimal?>("CostPerOccurrence")
                        .HasColumnType("decimal(10,2)");

                    b.Property<int>("HabitId")
                        .HasColumnType("int");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<decimal?>("OccurrencesPerDay")
                        .HasColumnType("decimal(10,2)");

                    b.Property<DateTime>("StartDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("UserHabitId");

                    b.HasIndex("HabitId");

                    b.HasIndex("UserId", "HabitId")
                        .IsUnique();

                    b.ToTable("UserHabits");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRole", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedName")
                        .IsUnique()
                        .HasDatabaseName("RoleNameIndex")
                        .HasFilter("[NormalizedName] IS NOT NULL");

                    b.ToTable("AspNetRoles", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RoleId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetRoleClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ProviderKey")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ProviderDisplayName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("LoginProvider", "ProviderKey");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserLogins", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("RoleId")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("UserId", "RoleId");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetUserRoles", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Value")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UserId", "LoginProvider", "Name");

                    b.ToTable("AspNetUserTokens", (string)null);
                });

            modelBuilder.Entity("BadHabitApp.Models.Goal", b =>
                {
                    b.HasOne("BadHabitApp.Models.ApplicationUser", "CreatedByUser")
                        .WithMany("CreatedGoals")
                        .HasForeignKey("CreatedByUserId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.Navigation("CreatedByUser");
                });

            modelBuilder.Entity("BadHabitApp.Models.Habit", b =>
                {
                    b.HasOne("BadHabitApp.Models.ApplicationUser", "CreatedByUser")
                        .WithMany("CreatedHabits")
                        .HasForeignKey("CreatedByUserId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.Navigation("CreatedByUser");
                });

            modelBuilder.Entity("BadHabitApp.Models.Relapse", b =>
                {
                    b.HasOne("BadHabitApp.Models.UserHabit", "UserHabit")
                        .WithMany("Relapses")
                        .HasForeignKey("UserHabitId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("UserHabit");
                });

            modelBuilder.Entity("BadHabitApp.Models.UserGoal", b =>
                {
                    b.HasOne("BadHabitApp.Models.Goal", "Goal")
                        .WithMany("UserGoals")
                        .HasForeignKey("GoalId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("BadHabitApp.Models.UserHabit", "UserHabit")
                        .WithMany("UserGoals")
                        .HasForeignKey("UserHabitId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("BadHabitApp.Models.ApplicationUser", "User")
                        .WithMany("UserGoals")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Goal");

                    b.Navigation("User");

                    b.Navigation("UserHabit");
                });

            modelBuilder.Entity("BadHabitApp.Models.UserHabit", b =>
                {
                    b.HasOne("BadHabitApp.Models.Habit", "Habit")
                        .WithMany("UserHabits")
                        .HasForeignKey("HabitId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("BadHabitApp.Models.ApplicationUser", "User")
                        .WithMany("UserHabits")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Habit");

                    b.Navigation("User");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.HasOne("BadHabitApp.Models.ApplicationUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.HasOne("BadHabitApp.Models.ApplicationUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("BadHabitApp.Models.ApplicationUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.HasOne("BadHabitApp.Models.ApplicationUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("BadHabitApp.Models.ApplicationUser", b =>
                {
                    b.Navigation("CreatedGoals");

                    b.Navigation("CreatedHabits");

                    b.Navigation("UserGoals");

                    b.Navigation("UserHabits");
                });

            modelBuilder.Entity("BadHabitApp.Models.Goal", b =>
                {
                    b.Navigation("UserGoals");
                });

            modelBuilder.Entity("BadHabitApp.Models.Habit", b =>
                {
                    b.Navigation("UserHabits");
                });

            modelBuilder.Entity("BadHabitApp.Models.UserHabit", b =>
                {
                    b.Navigation("Relapses");

                    b.Navigation("UserGoals");
                });
#pragma warning restore 612, 618
        }
    }
}
